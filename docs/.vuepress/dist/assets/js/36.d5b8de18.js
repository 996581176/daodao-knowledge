(window.webpackJsonp=window.webpackJsonp||[]).push([[36],{381:function(t,s,n){},441:function(t,s,n){"use strict";n(381)},479:function(t,s,n){"use strict";n.r(s);var a={mounted:function(){var t=document.getElementById("btnMore"),s=document.getElementById("conMore");t&&s&&(console.log(t,s),t.onclick=function(){s.innerHTML+="-新增文字"})}},e=(n(441),n(47)),v=Object(e.a)(a,(function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h2",{attrs:{id:"外部尺寸与流体特性"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#外部尺寸与流体特性"}},[t._v("#")]),t._v(" 外部尺寸与流体特性")]),t._v(" "),n("h3",{attrs:{id:"正常流宽度"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#正常流宽度"}},[t._v("#")]),t._v(" 正常流宽度")]),t._v(" "),n("p",[t._v("在页面中随便扔一个"),n("code",[t._v("<div>")]),t._v("元素，其尺寸表现就会和这水流一样铺满容器。这就是block容器的流特性。这种特性在所有浏览器的表现都是一致的。")]),t._v(" "),n("p",[t._v("所谓流特性，并不是看上去的宽度100%那么简单，而是一种margin/border/padding和content内容区域自动分配水平空间的机制。")]),t._v(" "),n("p",[t._v("因此，想让一个div自动铺满是不需要写“width:100%”的，多此一举而。")]),t._v(" "),n("h3",{attrs:{id:"格式化宽度"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#格式化宽度"}},[t._v("#")]),t._v(" 格式化宽度")]),t._v(" "),n("p",[t._v("格式化宽度仅出现在“绝对定位模型”中，也就是出现在"),n("code",[t._v("position")]),t._v("属性为"),n("code",[t._v("absolute")]),t._v("或"),n("code",[t._v("fixed")]),t._v("的元素中。")]),t._v(" "),n("p",[t._v("在默认情况下，绝对定位元素的宽度表现是“包裹性”，宽度由内部尺寸决定。")]),t._v(" "),n("p",[t._v("但是对于非替换元素，当"),n("code",[t._v("left/right")]),t._v("或"),n("code",[t._v("top/bottom")]),t._v("对立方位的属性同时存在时，元素的宽度表现为“格式化宽度”，其宽度大小相对于最近的具有定位特性（position属性不是static）的祖先元素计算。")]),t._v(" "),n("p",[t._v("“格式化宽度”具有完全的流体性，也就是margin、border、padding和content内容区域同样会自动分配水平（和垂直）空间。")]),t._v(" "),n("h2",{attrs:{id:"内部尺寸与流体特性"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#内部尺寸与流体特性"}},[t._v("#")]),t._v(" 内部尺寸与流体特性")]),t._v(" "),n("p",[t._v("所谓“内部尺寸”，简单来讲就是元素的尺寸由内部的元素决定，而非由外部的容器决定。")]),t._v(" "),n("div",{staticClass:"custom-block tip"},[n("p",{staticClass:"custom-block-title"},[t._v("Q:如何快速判断一个元素使用的是否为“内部尺寸”")]),t._v(" "),n("p",[t._v("假如这个元素里面没有内容，宽度就是0，那就是应用的“内部尺寸”。")])]),t._v(" "),n("p",[t._v("内部尺寸的三种表现形式：")]),t._v(" "),n("h3",{attrs:{id:"包裹性"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#包裹性"}},[t._v("#")]),t._v(" 包裹性")]),t._v(" "),n("p",[t._v("包裹的意思就是“shrink-to-fit”,即收缩到合适，除了“包裹性”，还有“自适应性”。")]),t._v(" "),n("p",[t._v("所谓“自适应性”，指的是元素尺寸由内部元素决定，但永远小于“包含块”容器的尺寸（除非容器尺寸小于元素的“首选最小宽度”）。")]),t._v(" "),n("p",[t._v("因此如果一个元素的"),n("code",[t._v("display")]),t._v("属性值是"),n("code",[t._v("inline-block")]),t._v(",那么即使其里面内容再多，只要是正常文本，宽度也不会超过父容器。")]),t._v(" "),n("div",{staticClass:"custom-block tip"},[n("p",{staticClass:"custom-block-title"},[t._v("“按钮”元素是 inline-block 元素")]),t._v(" "),n("p",[t._v("按钮文字越多宽度越宽（内部尺寸特性），但如果文字足够多，则会在容器的宽度处自动换行（自适应特性）。（button标签按钮才会自动换行，input标签按钮默认 white-space:pre,需要将pre值重置为默认的normal）")])]),t._v(" "),n("div",{staticClass:"custom-block tip"},[n("p",{staticClass:"custom-block-title"},[t._v("“包裹性”对实际开发有什么作用呢？")]),t._v(" "),n("p",[t._v("请看这个需求： 页面某个模块的文字内容是动态的，可能是几个字，也能是一句话。然后希望文字少的时候居中显示，文字超过一行就居左显示。该如何实现呢？")]),t._v(" "),n("p",[t._v("核心css代码如下：")]),t._v(" "),n("div",{staticClass:"language-css line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-css"}},[n("code",[n("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".box")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token property"}},[t._v("text-align")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" center"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".content")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token property"}},[t._v("display")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" inline-block"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token property"}},[t._v("text-align")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" left"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br"),n("span",{staticClass:"line-number"},[t._v("6")]),n("br"),n("span",{staticClass:"line-number"},[t._v("7")]),n("br")])]),n("p",[t._v("这样，box的center控制的是 content元素居中，而content元素在文字少的时候没有那么长，因此整体文字看起来就是居中的，一旦超过一行，content元素的宽度占满box，box的center看起来就不起作用了（实际上还是起作用的，只不过是content太宽了，此时content上设置的text-align:left就显现出来了。）\n")]),n("div",{staticClass:"box"},[n("p",{staticClass:"content",attrs:{id:"conMore"}},[t._v("文字内容")])]),t._v(" "),n("p",[n("button",{attrs:{id:"btnMore"}},[t._v("更多文字")])]),n("p")]),t._v(" "),n("p",[t._v("除了"),n("code",[t._v("inline-block")]),t._v("元素，浮动元素以及绝对定位元素都具有包裹性，均有类似的只能宽度行为。")])])}),[],!1,null,"6fb7ec7c",null);s.default=v.exports}}]);