(window.webpackJsonp=window.webpackJsonp||[]).push([[39],{384:function(t,s,a){},449:function(t,s,a){"use strict";a(384)},515:function(t,s,a){"use strict";a.r(s);a(449);var n=a(47),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"什么是替换元素"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#什么是替换元素"}},[t._v("#")]),t._v(" 什么是替换元素")]),t._v(" "),a("p",[t._v("替换元素，顾名思义，就是内容可以被替换。举个例子"),a("code",[t._v('<img src="1.jpg">')]),t._v("，如果把上面的1.jpg换成2.jpg,图片内容就被替换了")]),t._v(" "),a("p",[t._v("这种通过修改某个属性值呈现的内容就可以被替换的元素称为“替换元素”。因此，"),a("code",[t._v("<img>、<object>、<video>、<iframe>")]),t._v("或者表单元素"),a("code",[t._v("<textarea>")]),t._v("和"),a("code",[t._v("<input>")]),t._v("都是典型的替换元素。")]),t._v(" "),a("p",[t._v("替换元素除了内容可替换这一特性以外，还有以下一些特征")]),t._v(" "),a("h3",{attrs:{id:"内容的外观不受页面上的css的影响"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#内容的外观不受页面上的css的影响"}},[t._v("#")]),t._v(" 内容的外观不受页面上的CSS的影响")]),t._v(" "),a("p",[t._v("用专业的话讲就是在样式表现在CSS作用域外")]),t._v(" "),a("p",[t._v("如何更改替换元素本身的外观？需要类似appearance属性，或者浏览器自身暴露的一些样式接口，例如"),a("code",[t._v("::-ms-check{}")]),t._v("可以更改更高版本IE浏览器下单复选框内的间距、背景色等样式，但是直接 "),a("code",[t._v("input[type='checkbox']{}")]),t._v("却无法更改内间距、背景色等样式。")]),t._v(" "),a("h3",{attrs:{id:"有自己的尺寸"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#有自己的尺寸"}},[t._v("#")]),t._v(" 有自己的尺寸")]),t._v(" "),a("p",[t._v("在Web中，很多替换元素在没有明确尺寸设定的情况下，其默认的尺寸(不包括变量)是300px * 150px，也有0像素的，其实具体的尺寸要看浏览器，没有什么明显的规律")]),t._v(" "),a("h3",{attrs:{id:"在很多css属性上有自己的一套表现规则"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#在很多css属性上有自己的一套表现规则"}},[t._v("#")]),t._v(" 在很多CSS属性上有自己的一套表现规则")]),t._v(" "),a("p",[t._v("比较具有代表性的就是vertical-align属性，对于替换元素和非替换元素，vertical-align属性值的解释是不一样的")]),t._v(" "),a("p",[t._v("比方说vertical-align的默认值baseline，基线，被定义为字符x的下边缘。但是到了替换元素基线是元素的下边缘。")]),t._v(" "),a("h2",{attrs:{id:"替换元素的默认diaplay值"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#替换元素的默认diaplay值"}},[t._v("#")]),t._v(" 替换元素的默认diaplay值")]),t._v(" "),a("p",[t._v("根据浏览器的不同，替换元素的display是inline、block和inline-block中的任意一个，其尺寸计算规则都是一样的。")]),t._v(" "),a("h2",{attrs:{id:"替换元素的尺寸计算规则"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#替换元素的尺寸计算规则"}},[t._v("#")]),t._v(" 替换元素的尺寸计算规则")]),t._v(" "),a("p",[t._v("张大佬个人将替换元素的尺寸从内而外分为3类：固有尺寸、HTML尺寸和CSS尺寸。")]),t._v(" "),a("h3",{attrs:{id:"固有尺寸"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#固有尺寸"}},[t._v("#")]),t._v(" 固有尺寸")]),t._v(" "),a("p",[t._v("固有尺寸指的是替换内容原本的尺寸。")]),t._v(" "),a("p",[t._v("例如，图片、视频作为一个独立文件存在的时候，都是有着自己的宽度和高度的。这个宽度和高度的大小就是这里的“固有尺寸”，对于表单类替换元素，“固有尺寸”可以理解为“不加修饰的默认尺寸”")]),t._v(" "),a("h3",{attrs:{id:"html尺寸"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#html尺寸"}},[t._v("#")]),t._v(" HTML尺寸")]),t._v(" "),a("p",[t._v("这个概念略微抽象，HTML尺寸只能通过HTML原生属性改变，这些HTML原生属性包括"),a("code",[t._v("<img>")]),t._v("的width和height属性，"),a("code",[t._v("<input>")]),t._v("的size属性，"),a("code",[t._v("<textare>")]),t._v("的cols和rows属性等。")]),t._v(" "),a("div",{staticClass:"language-html line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-html"}},[a("code",[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("img")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("width")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("200"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("height")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("100"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("input")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("type")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("file"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("size")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("30"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("textarea")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("cols")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("20"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("rows")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("5"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("textarea")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br")])]),a("h3",{attrs:{id:"css尺寸"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#css尺寸"}},[t._v("#")]),t._v(" CSS尺寸")]),t._v(" "),a("p",[t._v("CSS尺寸特指可以通过CSS的 width和height或者max-width/min-width和max-height/min-height设置的尺寸，对应盒尺寸中的content box。")]),t._v(" "),a("h3",{attrs:{id:"计算规则"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#计算规则"}},[t._v("#")]),t._v(" 计算规则")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("如果没有CSS尺寸和HTML尺寸，则使用固有尺寸作为最终的宽高。")])]),t._v(" "),a("li",[a("p",[t._v("如果没有CSS尺寸，则使用HTML尺寸作为最终宽高。")])]),t._v(" "),a("li",[a("p",[t._v("如果有CSS尺寸，则最终尺寸由CSS属性决定。")])]),t._v(" "),a("li",[a("p",[t._v("如果“固有尺寸”含有固有的宽高比例，同时仅设置了宽度或者仅设置了高度，则元素依然按照固有的宽高比例计算。")])]),t._v(" "),a("li",[a("p",[t._v("内联替换元素和块级替换元素使用上面同一套尺寸计算规则。")])])]),t._v(" "),a("div",{staticClass:"custom-block warning"},[a("p",{staticClass:"custom-block-title"},[t._v("注意")]),t._v(" "),a("p",[t._v("我们是无法改变这个替换元素内容的固有尺寸的，比如,图片的固有尺寸不会变的！")])]),t._v(" "),a("h2",{attrs:{id:"content与替换元素关系剖析"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#content与替换元素关系剖析"}},[t._v("#")]),t._v(" content与替换元素关系剖析")]),t._v(" "),a("p",[t._v("content属性生成的内容就是替换元素。因此content属性生成的内容和普通元素内容有很多不一样的地方：")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("content生成的文本是无法选中、无法复制的，同时，content生成的文本信息无法被屏幕阅读设备读取，也无法被搜索引擎抓取，"),a("strong",[t._v("因此，千万不要自以为是的把重要的文本信息使用content属性生成")])])]),t._v(" "),a("li",[a("p",[t._v("不能左右:empty伪类"),a("br"),t._v("\n:empty是一个CSS选择器，当元素里面没有内容的时候进行匹配。例如：")]),t._v(" "),a("div",{staticClass:"language-html line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-html"}},[a("code",[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("div")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("有内容"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("div")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("div")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("div")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br")])]),a("div",{staticClass:"language-css line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token selector"}},[t._v("div")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("padding")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 10px"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("border")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 10px solid #cd0000"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token selector"}},[t._v("div:empty")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("border-style")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" dashed"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br")])]),a("p",[t._v("前面一个div是实线边框，而后面的因为里面没有内容，就是虚线边框，接下来，我们使用content属性给div生成一些文字：")]),t._v(" "),a("div",{staticClass:"language-css line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token selector"}},[t._v("div:after")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("content")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"伪元素生成内容"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br")])]),t._v(" "),a("div",{staticClass:"item"},[t._v("有内容")]),t._v(" "),a("div",{staticClass:"item"})])])])}),[],!1,null,"7c1ecb9a",null);s.default=e.exports}}]);